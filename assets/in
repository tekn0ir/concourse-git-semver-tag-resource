#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh
source $(dirname $0)/utils.sh

destination=$1

if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

# for jq
#PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/git-semver-shorthash-request.XXXXXX)

cat > $payload <&0

#input_version=$(jq -r '.version.number' < "$payload")

mkdir -p $destination
prepare_repository "$destination" "$payload" > "$destination/shorthash"

# bump version according to provided strategy (no strategy will simply return input version)
#bump_version "$input_version" "$payload" > "$destination/number"
#log "Version $(cat "$destination/number") written to file: <resource>/number"

#short_hash "$payload" > "$destination/shorthash"
log "Short hash $(cat "$destination/shorthash") written to file: <resource>/shorthash"

#metadata=""
#if [ -n "$input_version" ]; then
#  metadata="{ name: \"number\", value: \"$input_version\" }"
#fi
shorthash="$(cat "$destination/shorthash")"
jq -n "{
  shorthash: \"$shorthash\",
  metadata: [ { name: \"shorthash\", value: \"$shorthash\" } ]
}" >&3
